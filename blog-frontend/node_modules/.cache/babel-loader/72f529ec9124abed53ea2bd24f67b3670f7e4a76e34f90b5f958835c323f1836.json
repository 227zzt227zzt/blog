{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create-article-container\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $setup.form,\n    \"label-width\": \"80px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"标题\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.title = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"摘要\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.summary,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.summary = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"内容\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"textarea\",\n        modelValue: $setup.form.content,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.content = $event),\n        rows: 10\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"封面\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_upload, {\n        \"show-file-list\": false,\n        \"before-upload\": $setup.beforeUpload,\n        \"http-request\": $setup.handleCoverUpload,\n        accept: \"image/*\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, null, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"上传封面\")])),\n          _: 1 /* STABLE */,\n          __: [4]\n        })]),\n        _: 1 /* STABLE */\n      }), $setup.form.coverImage ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: $setup.form.coverImage,\n        style: {\n          \"max-width\": \"200px\",\n          \"margin-left\": \"20px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"分类\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.categoryId,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.categoryId = $event),\n        placeholder: \"请输入分类ID（如无可留空）\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleSubmit\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"发布\")])),\n        _: 1 /* STABLE */,\n        __: [5]\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","model","$setup","form","_component_el_form_item","label","_component_el_input","title","$event","summary","type","content","rows","_component_el_upload","beforeUpload","handleCoverUpload","accept","_component_el_button","_cache","coverImage","src","style","categoryId","placeholder","onClick","handleSubmit"],"sources":["C:\\Users\\52291\\Desktop\\test\\blog\\blog\\blog-frontend\\src\\views\\ArticleCreateView.vue"],"sourcesContent":["<template>\r\n  \r\n    <div class=\"create-article-container\">\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"标题\">\r\n          <el-input v-model=\"form.title\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"摘要\">\r\n          <el-input v-model=\"form.summary\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\">\r\n          <el-input type=\"textarea\" v-model=\"form.content\" :rows=\"10\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-upload\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"beforeUpload\"\r\n            :http-request=\"handleCoverUpload\"\r\n            accept=\"image/*\"\r\n          >\r\n            <el-button>上传封面</el-button>\r\n          </el-upload>\r\n          <img v-if=\"form.coverImage\" :src=\"form.coverImage\" style=\"max-width: 200px; margin-left: 20px;\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-input v-model=\"form.categoryId\" placeholder=\"请输入分类ID（如无可留空）\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">发布</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue'\r\n  import { useRouter } from 'vue-router'\r\n  import { uploadArticleCover, createArticle } from '@/api/article'\r\n  import { ElMessage } from 'element-plus'\r\n\r\n  const router = useRouter()\r\n  const form = ref({\r\n    title: '',\r\n    summary: '',\r\n    content: '',\r\n    coverImage: '',\r\n    categoryId: '',\r\n  })\r\n  const beforeUpload = (file) => {\r\n    if (!file.type.startsWith('image/')) {\r\n      ElMessage.error('只能上传图片')\r\n      return false\r\n    }\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      ElMessage.error('图片大小不能超过5MB')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  const coverImage1 = ref('')\r\n  const handleCoverUpload = async (options) => {\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('file', options.file)\r\n      const res = await uploadArticleCover(formData)\r\n      if (res.success) {\r\n        coverImage1.value =res.data\r\n        form.value.coverImage ='http://localhost:8082/'+ coverImage1.value\r\n        console.log('封面上传成功:', form.value.coverImage)\r\n        ElMessage.success('封面上传成功')\r\n      } else {\r\n        ElMessage.error(res.message || '封面上传失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('封面上传失败:', error)\r\n      ElMessage.error(error.response?.data?.message || '封面上传失败')\r\n    }\r\n  }\r\n  \r\n  const handleSubmit = async () => {\r\n    if (!form.value.title) {\r\n      ElMessage.warning('请输入文章标题')\r\n      return\r\n    }\r\n    if (!form.value.summary) {\r\n      ElMessage.warning('请输入文章摘要')\r\n      return\r\n    }\r\n    if (!form.value.content) {\r\n      ElMessage.warning('请输入文章内容')\r\n      return\r\n    }\r\n    if (!form.value.coverImage) {\r\n      ElMessage.warning('请上传封面图片')\r\n      return\r\n    }\r\n    // categoryId 可选，如有分类可校验\r\n    // if (!form.value.categoryId) {\r\n    //   ElMessage.warning('请选择分类')\r\n    //   return\r\n    // }\r\n    console.log('提交的文章数据:', form.value)\r\n    try {\r\n      const res = await createArticle({\r\n        title: form.value.title,\r\n        summary: form.value.summary,\r\n        content: form.value.content,\r\n        categoryId: form.value.categoryId || null,\r\n        coverImage: coverImage1.value || null,\r\n        status: '1', // 或 1，视后端支持\r\n      })\r\n      if (res.success) {\r\n        ElMessage.success('文章发布成功')\r\n        router.push('/articles')\r\n      } else {\r\n        ElMessage.error(res.message || '发布失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('发布文章失败:', error)\r\n      ElMessage.error('发布失败')\r\n    }\r\n  }\r\n  </script>"],"mappings":";;EAESA,KAAK,EAAC;AAA0B;;;;;;;;uBAArCC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,YAAA,CA2BUC,kBAAA;IA3BAC,KAAK,EAAEC,MAAA,CAAAC,IAAI;IAAE,aAAW,EAAC;;sBACjC,MAEe,CAFfJ,YAAA,CAEeK,uBAAA;MAFDC,KAAK,EAAC;IAAI;wBACtB,MAAiC,CAAjCN,YAAA,CAAiCO,mBAAA;oBAAdJ,MAAA,CAAAC,IAAI,CAACI,KAAK;mEAAVL,MAAA,CAAAC,IAAI,CAACI,KAAK,GAAAC,MAAA;;;QAE/BT,YAAA,CAEeK,uBAAA;MAFDC,KAAK,EAAC;IAAI;wBACtB,MAAmC,CAAnCN,YAAA,CAAmCO,mBAAA;oBAAhBJ,MAAA,CAAAC,IAAI,CAACM,OAAO;mEAAZP,MAAA,CAAAC,IAAI,CAACM,OAAO,GAAAD,MAAA;;;QAEjCT,YAAA,CAEeK,uBAAA;MAFDC,KAAK,EAAC;IAAI;wBACtB,MAA8D,CAA9DN,YAAA,CAA8DO,mBAAA;QAApDI,IAAI,EAAC,UAAU;oBAAUR,MAAA,CAAAC,IAAI,CAACQ,OAAO;mEAAZT,MAAA,CAAAC,IAAI,CAACQ,OAAO,GAAAH,MAAA;QAAGI,IAAI,EAAE;;;QAE1Db,YAAA,CAUeK,uBAAA;MAVDC,KAAK,EAAC;IAAI;wBACtB,MAOY,CAPZN,YAAA,CAOYc,oBAAA;QANT,gBAAc,EAAE,KAAK;QACrB,eAAa,EAAEX,MAAA,CAAAY,YAAY;QAC3B,cAAY,EAAEZ,MAAA,CAAAa,iBAAiB;QAChCC,MAAM,EAAC;;0BAEP,MAA2B,CAA3BjB,YAAA,CAA2BkB,oBAAA;4BAAhB,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,E;;;;;UAENhB,MAAA,CAAAC,IAAI,CAACgB,UAAU,I,cAA1BtB,mBAAA,CAAkG;;QAArEuB,GAAG,EAAElB,MAAA,CAAAC,IAAI,CAACgB,UAAU;QAAEE,KAA4C,EAA5C;UAAA;UAAA;QAAA;;;QAErDtB,YAAA,CAEeK,uBAAA;MAFDC,KAAK,EAAC;IAAI;wBACtB,MAAmE,CAAnEN,YAAA,CAAmEO,mBAAA;oBAAhDJ,MAAA,CAAAC,IAAI,CAACmB,UAAU;mEAAfpB,MAAA,CAAAC,IAAI,CAACmB,UAAU,GAAAd,MAAA;QAAEe,WAAW,EAAC;;;QAElDxB,YAAA,CAEeK,uBAAA;wBADb,MAA8D,CAA9DL,YAAA,CAA8DkB,oBAAA;QAAnDP,IAAI,EAAC,SAAS;QAAEc,OAAK,EAAEtB,MAAA,CAAAuB;;0BAAc,MAAEP,MAAA,QAAAA,MAAA,O,iBAAF,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}