{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useUserStore } from \"@/store/user\";\nimport { ElMessage } from \"element-plus\";\nimport { Refresh } from \"@element-plus/icons-vue\";\nimport { getCaptcha1, login } from \"@/api/user\";\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const userStore = useUserStore();\n    const form = ref({\n      username: \"\",\n      password: \"\",\n      captcha: \"\",\n      sessionId: \"\"\n    });\n    const captchaImage = ref(\"\");\n    const loading = ref(false);\n    const rules = ref({\n      username: [{\n        required: true,\n        message: \"请输入用户名\",\n        trigger: \"blur\"\n      }, {\n        min: 3,\n        max: 20,\n        message: \"长度在 3 到 20 个字符\",\n        trigger: \"blur\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\",\n        trigger: \"blur\"\n      }, {\n        min: 6,\n        max: 20,\n        message: \"长度在 6 到 20 个字符\",\n        trigger: \"blur\"\n      }],\n      captcha: [{\n        required: true,\n        message: \"请输入验证码\",\n        trigger: \"blur\"\n      }]\n    });\n\n    // 获取验证码\n    const getCaptcha = async () => {\n      const result = await getCaptcha1();\n      captchaImage.value = result.data;\n      form.value.sessionId = result.sessionId;\n    };\n    // 刷新验证码\n    const refreshCaptcha = () => {\n      getCaptcha();\n    };\n\n    // 处理登录\n    const handleLogin = async () => {\n      loading.value = true;\n      try {\n        const result = await login({\n          username: form.value.username,\n          password: form.value.password,\n          captcha: form.value.captcha,\n          sessionId: form.value.sessionId\n        });\n        console;\n        if (result.code === 200) {\n          ElMessage.success(\"登录成功\");\n          // 保存用户信息到 store\n          userStore.setUserInfo({\n            token: result.data.token,\n            user: result.data.user\n          });\n          router.push(\"/\");\n        } else {\n          ElMessage.error(result.message);\n          refreshCaptcha();\n        }\n      } catch (error) {\n        ElMessage.error(\"登录失败，请稍后重试\");\n        refreshCaptcha();\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 跳转到注册页面\n    const goToRegister = () => {\n      router.push(\"/register\");\n    };\n    onMounted(() => {\n      refreshCaptcha();\n    });\n    const __returned__ = {\n      router,\n      userStore,\n      form,\n      captchaImage,\n      loading,\n      rules,\n      getCaptcha,\n      refreshCaptcha,\n      handleLogin,\n      goToRegister,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get useUserStore() {\n        return useUserStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get getCaptcha1() {\n        return getCaptcha1;\n      },\n      get login() {\n        return login;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","useUserStore","ElMessage","Refresh","getCaptcha1","login","router","userStore","form","username","password","captcha","sessionId","captchaImage","loading","rules","required","message","trigger","min","max","getCaptcha","result","value","data","refreshCaptcha","handleLogin","console","code","success","setUserInfo","token","user","push","error","goToRegister"],"sources":["C:/Users/52291/Desktop/test/blog/blog/blog-frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-form\">\r\n      <div class=\"header\">\r\n        <div class=\"logo\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"currentColor\"\r\n          >\r\n            <path\r\n              d=\"M19 22H5a3 3 0 0 1-3-3V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v12h4v4a3 3 0 0 1-3 3zm-1-5v2a1 1 0 0 0 2 0v-2h-2zM6 7v2h8V7H6zm0 4v2h8v-2H6zm0 4v2h5v-2H6z\"\r\n            />\r\n          </svg>\r\n          <h1>博客系统</h1>\r\n        </div>\r\n        <p class=\"subtitle\">分享你的知识与见解</p>\r\n      </div>\r\n\r\n      <el-form\r\n        ref=\"loginForm\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        class=\"form-content\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"form.username\"\r\n            placeholder=\"用户名\"\r\n            prefix-icon=\"User\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"Lock\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"captcha\">\r\n          <div class=\"captcha-container\">\r\n            <el-input\r\n              v-model=\"form.captcha\"\r\n              placeholder=\"验证码\"\r\n              prefix-icon=\"Key\"\r\n              class=\"captcha-input\"\r\n            />\r\n            <div class=\"captcha-image\" @click=\"refreshCaptcha\">\r\n              <img v-if=\"captchaImage\" :src=\"captchaImage\" alt=\"验证码\" />\r\n              <div v-else class=\"captcha-placeholder\">\r\n                <el-icon><Refresh /></el-icon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"handleLogin\"\r\n            :loading=\"loading\"\r\n            class=\"login-btn\"\r\n          >\r\n            <span v-if=\"!loading\">登录</span>\r\n            <span v-else>登录中...</span>\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div class=\"footer\">\r\n        <p>\r\n          还没有账号? <span class=\"link\" @click=\"goToRegister\">立即注册</span>\r\n        </p>\r\n        <p class=\"copyright\">© 2024 博客系统 - 分享你的知识</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"decoration\">\r\n      <div class=\"circle circle-1\"></div>\r\n      <div class=\"circle circle-2\"></div>\r\n      <div class=\"circle circle-3\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nimport { useRouter } from \"vue-router\";\r\nimport { useUserStore } from \"@/store/user\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { Refresh } from \"@element-plus/icons-vue\";\r\nimport { getCaptcha1, login } from \"@/api/user\";\r\nconst router = useRouter();\r\nconst userStore = useUserStore();\r\n\r\nconst form = ref({\r\n  username: \"\",\r\n  password: \"\",\r\n  captcha: \"\",\r\n  sessionId: \"\",\r\n});\r\n\r\nconst captchaImage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst rules = ref({\r\n  username: [\r\n    { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n    { min: 3, max: 20, message: \"长度在 3 到 20 个字符\", trigger: \"blur\" },\r\n  ],\r\n  password: [\r\n    { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n    { min: 6, max: 20, message: \"长度在 6 到 20 个字符\", trigger: \"blur\" },\r\n  ],\r\n  captcha: [{ required: true, message: \"请输入验证码\", trigger: \"blur\" }],\r\n});\r\n\r\n// 获取验证码\r\nconst getCaptcha = async () => {\r\n  const result = await getCaptcha1();\r\n  captchaImage.value = result.data;\r\n  form.value.sessionId = result.sessionId;\r\n};\r\n// 刷新验证码\r\nconst refreshCaptcha = () => {\r\n  getCaptcha();\r\n};\r\n\r\n// 处理登录\r\nconst handleLogin = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const result = await login({\r\n      username: form.value.username,\r\n      password: form.value.password,\r\n      captcha: form.value.captcha,\r\n      sessionId: form.value.sessionId,\r\n    });\r\n    console;\r\n    if (result.code === 200) {\r\n      ElMessage.success(\"登录成功\");\r\n      // 保存用户信息到 store\r\n      userStore.setUserInfo({\r\n        token: result.data.token,\r\n        user: result.data.user,\r\n      });\r\n      router.push(\"/\");\r\n    } else {\r\n      ElMessage.error(result.message);\r\n      refreshCaptcha();\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"登录失败，请稍后重试\");\r\n    refreshCaptcha();\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 跳转到注册页面\r\nconst goToRegister = () => {\r\n  router.push(\"/register\");\r\n};\r\n\r\nonMounted(() => {\r\n  refreshCaptcha();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #6e8efb, #a777e3);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.login-form {\r\n  width: 400px;\r\n  padding: 40px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 16px;\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  z-index: 10;\r\n  position: relative;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logo svg {\r\n  width: 36px;\r\n  height: 36px;\r\n  fill: #6e8efb;\r\n}\r\n\r\n.logo h1 {\r\n  font-size: 28px;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n\r\n.subtitle {\r\n  color: #666;\r\n  font-size: 16px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.form-content {\r\n  margin-top: 20px;\r\n}\r\n\r\n.captcha-container {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.captcha-input {\r\n  flex: 1;\r\n}\r\n\r\n.captcha-image {\r\n  width: 120px;\r\n  height: 40px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  background: #f5f7fa;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.captcha-image:hover {\r\n  border-color: #6e8efb;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.captcha-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.captcha-placeholder {\r\n  color: #999;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 45px;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.footer {\r\n  margin-top: 25px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.link {\r\n  color: #6e8efb;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.link:hover {\r\n  color: #5a7de0;\r\n  text-decoration: underline;\r\n}\r\n\r\n.copyright {\r\n  margin-top: 15px;\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n.decoration {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.circle {\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.circle-1 {\r\n  width: 300px;\r\n  height: 300px;\r\n  top: -100px;\r\n  right: -100px;\r\n}\r\n\r\n.circle-2 {\r\n  width: 200px;\r\n  height: 200px;\r\n  bottom: -50px;\r\n  left: 10%;\r\n}\r\n\r\n.circle-3 {\r\n  width: 150px;\r\n  height: 150px;\r\n  top: 30%;\r\n  left: 20%;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}