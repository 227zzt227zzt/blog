{"ast":null,"code":"import request from '@/utils/request';\nexport const login = async loginData => {\n  try {\n    return await request.post(`/users/login`, {\n      ...loginData\n    });\n  } catch (error) {\n    return {\n      success: false,\n      message: error.response?.data?.message || '请求出错，请稍后再试'\n    };\n  }\n};\nexport const register = async registerData => {\n  try {\n    const response = await request.post(`/users/register`, registerData);\n    if (response.data && response.data.code === 200) {\n      return {\n        success: true,\n        message: '注册成功'\n      };\n    } else {\n      return {\n        success: false,\n        message: response.data.message || '注册失败'\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: error.response?.data?.message || '请求出错，请稍后再试'\n    };\n  }\n};\nexport const getCaptcha1 = async () => {\n  try {\n    const response = await request.get(`/captcha/generate`);\n    console.log('获取验证码响应:', response);\n    // 如果响应数据包含 code 字段且值为 200，表示成功\n    if (response.data && response.code === 200) {\n      return {\n        success: true,\n        data: response.data,\n        sessionId: response.sessionId,\n        message: '验证码获取成功'\n      };\n    } else {\n      return {\n        success: false,\n        message: response.data.message || '验证码获取失败'\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: '获取验证码失败，请稍后再试'\n    };\n  }\n};\n\n// 更新个人信息\nexport const updateProfile = async updateProfile => {\n  try {\n    const response = await request.put(`/users/updateUser`, updateProfile);\n    console.log('更新个人信息响应:', response);\n    if (response.data && response.code === 200) {\n      return {\n        success: true,\n        message: '更改成功',\n        data: response.data,\n        code: response.code\n      };\n    } else {\n      return {\n        success: false,\n        message: response.data.message || '更改失败22'\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: error.response?.data?.message || '请求出错，请稍后再试22'\n    };\n  }\n};\n\n// 处理头像上传\nexport const uploadAvatar = async formData => {\n  try {\n    const response = await request.post(`/users/uploadAvatar`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.data && response.code === 200) {\n      return {\n        success: true,\n        code: 200,\n        data: response.data,\n        message: '头像上传成功'\n      };\n    } else {\n      return {\n        success: false,\n        message: response.message || '头像上传失败'\n      };\n    }\n  } catch (error) {\n    console.error('头像上传失败:', error);\n    return {\n      success: false,\n      message: error.response?.data?.message || '头像上传失败'\n    };\n  }\n};","map":{"version":3,"names":["request","login","loginData","post","error","success","message","response","data","register","registerData","code","getCaptcha1","get","console","log","sessionId","updateProfile","put","uploadAvatar","formData","headers"],"sources":["C:/Users/52291/Desktop/test/blog/blog/blog-frontend/src/api/user.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\nexport const login = async (loginData) => {\r\n    try {\r\n      return await request.post(`/users/login`, {\r\n        ...loginData,\r\n      })  \r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || '请求出错，请稍后再试' \r\n      }\r\n    }\r\n  }\r\n  \r\n  export const register = async (registerData) => {\r\n    try {\r\n      const response = await request.post(`/users/register`, registerData)\r\n      if (response.data && response.data.code === 200) {\r\n        return { success: true, message: '注册成功' }\r\n      } else {\r\n        return { success: false, message: response.data.message || '注册失败' }\r\n      }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || '请求出错，请稍后再试' \r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getCaptcha1 = async () => {\r\n    try {\r\n        \r\n        const response = await request.get(`/captcha/generate`)\r\n        console.log('获取验证码响应:', response)\r\n        // 如果响应数据包含 code 字段且值为 200，表示成功\r\n        if (response.data && response.code === 200) {\r\n            return { \r\n                success: true, \r\n                data: response.data, \r\n                sessionId: response.sessionId,\r\n                message: '验证码获取成功' \r\n            }\r\n        } else {\r\n            return { \r\n                success: false, \r\n                message: response.data.message || '验证码获取失败' \r\n            }\r\n        }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: '获取验证码失败，请稍后再试' \r\n      }\r\n    }\r\n  }\r\n\r\n// 更新个人信息\r\nexport const updateProfile = async (updateProfile) => {\r\n  try {\r\n    const response = await request.put(`/users/updateUser`, updateProfile)\r\n    console.log('更新个人信息响应:', response)\r\n    if (response.data && response.code === 200) {\r\n      return { success: true,\r\n              message: '更改成功',\r\n              data: response.data,\r\n              code: response.code \r\n             }\r\n    } else {\r\n      return { success: false, message: response.data.message || '更改失败22' }\r\n    }\r\n  } catch (error) {\r\n    return { \r\n      success: false, \r\n      message: error.response?.data?.message || '请求出错，请稍后再试22' \r\n    }\r\n  }\r\n}\r\n\r\n// 处理头像上传\r\nexport const uploadAvatar = async (formData) => {\r\n  try {\r\n    const response = await request.post(`/users/uploadAvatar`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    if (response.data && response.code === 200) {\r\n      return { \r\n        success: true,\r\n        code: 200,\r\n        data: response.data,\r\n        message: '头像上传成功'\r\n      }\r\n    } else {\r\n      return { \r\n        success: false, \r\n        message: response.message || '头像上传失败' \r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('头像上传失败:', error)\r\n    return { \r\n      success: false, \r\n      message: error.response?.data?.message || '头像上传失败' \r\n    }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}